# Dependency Management
# This project uses Poetry for dependency management (pyproject.toml)
# To generate requirements.txt for deployment:
#   poetry export -f requirements.txt --output requirements.txt

# Service Configuration
DEBUG=True
LOG_LEVEL=DEBUG
ENVIRONMENT=development  # Options: development, production

# API Settings
API_HOST=0.0.0.0  # Host for the main orchestrator API
API_PORT=8000  # Port for the main orchestrator API
CONTEXT_MANAGER_HOST=0.0.0.0  # Host for the context manager service
CONTEXT_MANAGER_PORT=8001  # Port for the context manager service

# Database Configuration
DATABASE_URL=postgresql://zigral:zigral@localhost:5432/zigral

# Service Selection
SERVICE_NAME=orchestrator  # Options: orchestrator, context_manager, agent

# Security
TEMP_AUTH_TOKEN=zigral_dev_token_123  # Temporary token for development
JWT_SECRET_KEY=dev_secret_key_for_testing  # Secret key for JWT tokens
JWT_ALGORITHM=HS256  # Algorithm for JWT

# VDI Configuration
VIRTUAL_DESKTOP_MODE=True  # Enable virtual desktop
ENABLE_VIDEO_STREAM=False  # Enable video streaming
RESOLUTION=1920x1080x24  # Resolution for VNC display

# VNC Configuration
VNC_PASSWORD=zigral_vnc_secure_123  # Password for VNC access
VNC_HOST=0.0.0.0  # Host for VNC server
VNC_PORT=5900  # Port for VNC server
NOVNC_PORT=6080  # Port for noVNC web interface
VNC_HTTP_PORT=6081  # Alternative port for noVNC

# Redis Configuration
REDIS_PORT=6379  # Port for Redis
REDIS_URL=redis://redis:6379/0  # Redis URL for services

# Frontend Configuration
FRONTEND_URL=http://localhost:5173  # URL for the frontend
CORS_ORIGINS=http://localhost:5173,http://localhost:8080  # Allowed CORS origins

# Monitoring Configuration
PROMETHEUS_PORT=9090  # Port for Prometheus
GRAFANA_PORT=3000  # Port for Grafana
GRAFANA_PASSWORD=admin  # Password for Grafana admin user

# OpenAI Configuration
OPENAI_API_KEY=your_openai_api_key_here  # API key for OpenAI services

# Google API Configuration
# Required OAuth2 Scopes:
#  - https://www.googleapis.com/auth/spreadsheets (for Google Sheets access)
#  - https://www.googleapis.com/auth/drive (for full Drive access)
#  - https://www.googleapis.com/auth/drive.file (for specific file access)
#
# To set up credentials:
# 1. Go to Google Cloud Console
# 2. Create a project or select existing one
# 3. Enable Google Sheets API and Google Drive API
# 4. Create a service account with the above scopes
# 5. Download the JSON credentials file
#
# Option 1: Base64 encoded credentials JSON (preferred for production)
# To convert credentials file to base64:
#   base64 -i path/to/credentials.json | tr -d '\n'
GOOGLE_SHEETS_CREDENTIALS_JSON=base64_encoded_credentials_here

# Option 2: Path to credentials file (alternative)
GOOGLE_SHEETS_CREDENTIALS_PATH=/path/to/credentials.json

# Sheet Configuration
PROSPECTS_SHEET_ID=your_sheet_id_here  # The ID from your Google Sheet's URL
PROSPECTS_WORKSHEET=Sheet1  # The name of the worksheet to use 