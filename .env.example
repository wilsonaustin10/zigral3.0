# Dependency Management
# This project uses Poetry for dependency management (pyproject.toml)
# To generate requirements.txt for deployment:
#   poetry export -f requirements.txt --output requirements.txt

# Service Configuration
DEBUG=False  # Enable/disable debug mode
LOG_LEVEL=INFO  # Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)

# API Settings
API_HOST=0.0.0.0  # Host for the main orchestrator API
API_PORT=8000  # Port for the main orchestrator API
CONTEXT_MANAGER_HOST=0.0.0.0  # Host for the context manager service
CONTEXT_MANAGER_PORT=8001  # Port for the context manager service

# Database Configuration
DATABASE_URL=postgres://user:password@localhost:5432/zigral  # PostgreSQL connection string

# OpenAI Configuration
OPENAI_API_KEY=your_api_key_here  # OpenAI API key for LLM integration

# Service Selection (for Docker)
SERVICE_NAME=orchestrator  # Service to run (orchestrator or context-manager)

# Security (if implementing authentication)
JWT_SECRET_KEY=your_jwt_secret_here  # Secret key for JWT token generation
JWT_ALGORITHM=HS256  # Algorithm for JWT token generation 