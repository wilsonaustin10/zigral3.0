version: '3.8'

services:
  # Main Zigral API service
  zigral-api:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REDIS_URL=redis://redis:6379/0
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
      - DATABASE_URL=${DATABASE_URL:-postgresql://zigral:zigral@postgres:5432/zigral}
      - SERVICE_NAME=${SERVICE_NAME:-orchestrator}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev_secret_key_for_testing}
    volumes:
      - ./logs:/app/logs
    depends_on:
      agent-vm:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # VM for running agents with VNC
  agent-vm:
    image: zigral-vnc-agent-vm
    ports:
      - "${VNC_PORT:-5900}:5900"  # VNC
      - "${NOVNC_PORT:-6080}:6080"  # noVNC web client
      - "${VNC_HTTP_PORT:-6081}:6081"  # Alternative noVNC port
    volumes:
      - ./src/agents:/app/agents
      - ./shared:/shared
      - ./logs/agents:/var/log/agents
      - ./docker/config/supervisord.fixed.conf:/etc/supervisor/conf.d/supervisord.conf
    environment:
      - DISPLAY=:0
      - RESOLUTION=${RESOLUTION:-1920x1080x24}
      - VNC_PASSWORD=${VNC_PASSWORD:-zigral_vnc_secure_123}
      - VNC_HOST=${VNC_HOST:-0.0.0.0}
      - VNC_PORT=${VNC_PORT:-5900}
      - REDIS_URL=redis://redis:6379/0
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5900"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and message broker
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Monitoring
  prometheus:
    image: prom/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./docker/config/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - zigral-api
      - agent-vm

  # Visualization
  grafana:
    image: grafana/grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}

volumes:
  redis-data:
  grafana-data: 